name: Build, test, release

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ext

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2']
        os: ['debian', 'alpine']
    container:
      image: ghcr.io/open-telemetry/opentelemetry-php-instrumentation/php:${{ matrix.php }}-${{ matrix.os }}-debug

    steps:
      -   uses: actions/checkout@v3

      -   name: Build
          run: |
            phpize
            ./configure
            make

      -   name: Test
          env:
            TEST_PHP_ARGS: "-q" #do not try to submit failures
          run: make test TESTS=--show-diff

  pecl-package:
    runs-on: ubuntu-latest
    container:
      image: php:8.2-cli

    steps:
      - uses: actions/checkout@v3

      - name: Package and copy
        run: |
          mkdir binaries
          pear package-validate
          pear package
          cp opentelemetry-*.tgz binaries/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: opentelemetry-pecl
          path: ext/binaries/*.tgz
          if-no-files-found: error

  windows:
    runs-on: windows-2019
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install PHP ${{ matrix.php }}
        uses: cmb69/setup-php-sdk@v0.7
        id: setup-php-sdk
        with:
          version: ${{ matrix.php }}
          arch: x64
          ts: nts
      - name: Install dependencies
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: ${{ steps.setup-php-sdk.outputs.toolset }}
      - name: Build
        run: |
          phpize
          ./configure --enable-opentelemetry --with-prefix=${{ steps.setup-php-sdk.outputs.prefix }}
          nmake
      - name: Test
        env:
          TEST_PHP_ARGS: "-q"
        run: nmake test TESTS=--show-diff
      - name: Copy binaries
        env:
          BUILD_NAME: "opentelemetry-${{matrix.php}}-${{steps.setup-php-sdk.outputs.vs}}-x64-nts}}"
        run: |
          md binaries\$BUILD_NAME
          copy x64\Release\php_opentelemetry.dll binaries\$BUILD_NAME\php_opentelemetry.dll
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: opentelemetry-${{matrix.php}}-windows-x64-nts
          path: ext\x64\Release\php_opentelemetry.dll
          if-no-files-found: error

  find-binaries:
    runs-on: ubuntu-latest
    needs: [linux, pecl-package, windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: mkdir
        run: |
          mkdir binaries
      - name: download-artifacts
        uses: actions/download-artifact@v3
        with:
          path: ext/binaries
      - name: find
        run: |
          pwd
          find . -name "*.dll"
          find . -name "*.tgz"

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, pecl-package, windows]
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: ext/binaries/*